upstream hhlink {
    server web:8000;
}

server {
    listen 80;
    server_name hermeslink.ssdc.asi.it;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name hermeslink.ssdc.asi.it;

    ssl_certificate /etc/letsencrypt/live/hermeslink.ssdc.asi.it/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hermeslink.ssdc.asi.it/privkey.pem;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    location / {
        proxy_pass http://hhlink;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location /static/ {
        alias /home/app/static/staticfiles/;
    }

    location /media/ {
        alias /home/app/static/mediafiles/;
    }

    location /grafana/ {
        auth_request /auth-status/;
        # captures username from auth header and provides it to grafana for user authentication
        auth_request_set $auth_user $upstream_http_username;
        proxy_set_header X-WEBAUTH-USER $auth_user;

        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;

        rewrite ^/grafana/(.*) /$1 break;
    }

    location /auth-status/ {
        internal;
        proxy_pass http://hhlink/auth-status/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }
}

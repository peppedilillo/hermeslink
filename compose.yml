services:
  web:
    env_file:
      - .django.env
      - .celery.env
      - .postgres.env
      - .influxdb.env
      - .ssh.env
      - .contacts.env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
    build: django/hlink
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             (celery -A hlink worker --loglevel=info &
             celery -A hlink beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler &
             python manage.py runserver 0.0.0.0:8000)"
    volumes:
      - ./django/hlink:/home/app/web
      - ./django/dev/mediafiles:/home/app/static/mediafiles
      - ./django/dev/emails:/home/app/emails
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 1s
      retries: 5

  postgres:
    env_file:
      - .postgres.env
    image: postgres:13-alpine
    restart: always
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 1s

  flower:
    env_file:
      - .celery.env
    environment:
      TZ: Europe/Rome
    image: mher/flower
    container_name: flower
    command: celery flower
    ports:
      - 5555:5555
    depends_on:
      redis:
        condition: service_healthy

  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
